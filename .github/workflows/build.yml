name: Build & upload binaries
on: [ push ]
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022, ubuntu-22.04]
        arch: [x64, arm64]
        include:
          - os: ubuntu-22.04
            arch: android
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup Java JDK
      if: ${{ matrix.arch == 'android' }}
      uses: actions/setup-java@v4.5.0
      with:
        java-version: 18
        distribution: adopt          
    - name: Setup Android SDK
      if: ${{ matrix.arch == 'android' }}
      uses: android-actions/setup-android@v3.2.1
      with:
        cmdline-tools-version: 11076708
        log-accepted-android-sdk-licenses: false
        packages: build-tools;33.0.1 ndk;25.1.8937393 platform-tools platforms;android-34
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Setup .NET Android
      if: ${{ matrix.arch == 'android' }}
      run: dotnet workload install android
    - name: Prepare for ARM64 Linux
      if: ${{ matrix.arch == 'arm64' && matrix.os == 'ubuntu-22.04' }}
      run: |
        sudo dpkg --add-architecture arm64
        sudo bash -c 'cat > /etc/apt/sources.list.d/arm64.list <<EOF
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy main restricted
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-updates main restricted
        deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ jammy-backports main restricted universe multiverse
        EOF'
        sudo sed -i -e 's/deb http/deb [arch=amd64] http/g' /etc/apt/sources.list
        sudo sed -i -e 's/deb mirror/deb [arch=amd64] mirror/g' /etc/apt/sources.list
        sudo apt update
        sudo apt install -y clang llvm binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu zlib1g-dev:arm64
    - name: Build Desktop app
      if: ${{ matrix.arch != 'android' }}
      env:
        net_rid: ${{ fromJSON('["linux", "win"]')[matrix.os == 'windows-2022'] }}
      run: dotnet publish Sample.Desktop -p:PublishAot=true -r ${{ env.net_rid }}-${{ matrix.arch }}
    - name: Build Android app
      if: ${{ matrix.arch == 'android' }}
      run: dotnet publish Sample.Android
    - name: Add MSBuild to PATH
      if: ${{ matrix.os == 'windows-2022' }}
      uses: microsoft/setup-msbuild@v2
    - name: Build SDL.dll to bundle with Windows artifact
      if: ${{ matrix.os == 'windows-2022' }}
      run: |
        git submodule update --init --recursive
        cd ./SDL/VisualC/SDL
        msbuild -p:Configuration=Release -p:Platform=${{ matrix.arch }}
    - name: Upload Android APK
      if: ${{ matrix.arch == 'android' }}
      uses: actions/upload-artifact@v4
      with:
        name: android_apk
        path: Sample.Android/bin/Release/net8.0-android/ru.nukleer.SampleAndroid-Signed.apk
        if-no-files-found: error
    - name: Upload Android AAB
      if: ${{ matrix.arch == 'android' }}
      uses: actions/upload-artifact@v4
      with:
        name: android_aab
        path: Sample.Android/bin/Release/net8.0-android/ru.nukleer.SampleAndroid-Signed.aab
        if-no-files-found: error
    - name: Upload Linux executable
      if: ${{ matrix.os == 'ubuntu-22.04' && matrix.arch != 'android' }}
      uses: actions/upload-artifact@v4
      with:
        name: linux-${{ matrix.arch }}
        path: Sample.Desktop/bin/Release/net8.0/linux-${{ matrix.arch }}/publish/Sample.Desktop
        if-no-files-found: error
    - name: Prepare Windows executable
      if: ${{ matrix.os == 'windows-2022' }}
      run: |
        mkdir UploadWindows
        move SDL\VisualC\SDL\${{ matrix.arch }}\Release\SDL2.dll UploadWindows
        move Sample.Desktop\bin\Release\net8.0\win-${{ matrix.arch }}\publish\Sample.Desktop.exe UploadWindows
    - name: Upload Windows executable
      if: ${{ matrix.os == 'windows-2022' }}
      uses: actions/upload-artifact@v4
      with:
        name: windows-${{ matrix.arch }}
        path: |
          UploadWindows/Sample.Desktop.exe
          UploadWindows/SDL2.dll
        if-no-files-found: error
